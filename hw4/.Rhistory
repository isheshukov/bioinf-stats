library(rethinking)
salamanders = data(salamanders)
data <- data("salamanders")
f <- alist(
SALAMAN ~ dpois(lambda),
log(lambda) <- alpha + beta_pct_cover*PCTCOVER,
alpha ~ dnorm(0, 10),
beta_pct_cover ~ dnorm(0, 5)
)
precis(m10H4.stan)
precis(m10H4.stan)
m10H4.map <- map(f, data = d)
f <- alist(
SALAMAN ~ dpois(lambda),
log(lambda) <- alpha + beta_pct_cover*PCTCOVER,
alpha ~ dnorm(0, 10),
beta_pct_cover ~ dnorm(0, 5)
)
m10H4.map <- map(f, data = d)
f <- alist(
SALAMAN ~ dpois(lambda),
log(lambda) <- alpha + beta_pct_cover*PCTCOVER,
alpha ~ dnorm(0, 10),
beta_pct_cover ~ dnorm(0, 5)
)
m10H4.map <- map(f, data = data)
f <- alist(
SALAMAN ~ dpois(lambda),
log(lambda) <- alpha + beta_pct_cover*PCTCOVER,
alpha ~ dnorm(0, 10),
beta_pct_cover ~ dnorm(0, 5)
)
m10H4.map <- map(f, data = sal)
library(rethinking)
sal <- data("salamanders")
f <- alist(
SALAMAN ~ dpois(lambda),
log(lambda) <- alpha + beta_pct_cover*PCTCOVER,
alpha ~ dnorm(0, 10),
beta_pct_cover ~ dnorm(0, 5)
)
m10H4.map <- map(f, data = sal)
library(rethinking)
data("salamanders")
sal <- salamanders
library(rethinking)
data("salamanders")
f <- alist(
SALAMAN ~ dpois(lambda),
log(lambda) <- alpha + beta_pct_cover*PCTCOVER,
alpha ~ dnorm(0, 10),
beta_pct_cover ~ dnorm(0, 5)
)
m10H4.map <- map(f, data = salamanders)
m10H4.stan <- map2stan(f, data = salamanders, warmup = 1e3, iter = 3e3, chains = 2)
precis(m10H4.map)
precis(m10H4.stan)
# plot model predictions
pctcover.seq <- seq(from=0,to=100,length.out=30)
lambda <- link(m10H4.stan, data = list(PCTCOVER = pctcover.seq))
lambda.mean <- apply(X = lambda, MARGIN = 2, FUN = mean)
lambda.PI <- apply(X = lambda, MARGIN = 2, FUN = PI)
counts <- sim(m10H4.stan, data = list(PCTCOVER = pctcover.seq))
counts.mean <- apply(X = counts, MARGIN = 2, FUN = mean)
counts.PI <- apply(X = counts, MARGIN = 2, FUN = PI)
plot(SALAMAN ~ PCTCOVER, data = d)
# plot model predictions
pctcover.seq <- seq(from=0,to=100,length.out=30)
lambda <- link(m10H4.stan, data = list(PCTCOVER = pctcover.seq))
lambda.mean <- apply(X = lambda, MARGIN = 2, FUN = mean)
lambda.PI <- apply(X = lambda, MARGIN = 2, FUN = PI)
counts <- sim(m10H4.stan, data = list(PCTCOVER = pctcover.seq))
counts.mean <- apply(X = counts, MARGIN = 2, FUN = mean)
counts.PI <- apply(X = counts, MARGIN = 2, FUN = PI)
plot(SALAMAN ~ PCTCOVER, data = sal)
lines(pctcover.seq, lambda.mean)
shade(lambda.PI, pctcover.seq)
shade(counts.PI, pctcover.seq)
curve(dpois(x, .8), from = 0, to = 10)
f <- alist(
SALAMAN ~ dpois(lambda),
log(lambda) <- alpha + beta*PCTCOVER,
alpha ~ dnorm(0, 1),
cover ~ dnorm(0, 1)
)
m10H4.map <- map(f, data = salamanders)
library(rethinking)
data("salamanders")
f <- alist(
SALAMAN ~ dpois(lambda),
log(lambda) <- alpha + beta*PCTCOVER,
alpha ~ dnorm(0, 1),
cover ~ dnorm(0, 1)
)
m10H4.map <- map(f, data = salamanders)
f <- alist(
SALAMAN ~ dpois(lambda),
log(lambda) <- alpha + beta*PCTCOVER,
alpha ~ dnorm(0, 10),
cover ~ dnorm(0, 10)
)
m10H4.map <- map(f, data = salamanders)
f <- alist(
SALAMAN ~ dpois(lambda),
log(lambda) <- alpha + beta*PCTCOVER,
alpha ~ dnorm(0, 1),
cover ~ dnorm(0, 1)
)
m10H4.map <- map(f, data = salamanders)
library(rethinking)
d <- data("salamanders")
f <- alist(
SALAMAN ~ dpois(lambda),
log(lambda) <- alpha + beta*PCTCOVER,
alpha ~ dnorm(0, 1),
cover ~ dnorm(0, 1)
)
m10H4.map <- map(f, data = d)
f <- alist(
SALAMAN ~ dpois(lambda),
log(lambda) <- alpha + beta*PCTCOVER,
alpha ~ dnorm(0, 1),
cover ~ dnorm(0, 1)
)
m10H4.map <- map(f, data = d)
library(rethinking)
d <- data("salamanders")
f <- alist(
SALAMAN ~ dpois(lambda),
log(lambda) <- alpha + beta*PCTCOVER,
alpha ~ dnorm(0, 1),
cover ~ dnorm(0, 1)
)
m10H4.map <- map(f, data = d)
library(rethinking)
data("salamanders")
f <- alist(
SALAMAN ~ dpois(lambda),
log(lambda) <- alpha + beta*PCTCOVER,
alpha ~ dnorm(0, 1),
cover ~ dnorm(0, 1)
)
m10H4.map <- map(f, data = salamanders)
f <- alist(
SALAMAN ~ dpois(lambda),
log(lambda) <- alpha + beta*PCTCOVER,
alpha ~ dnorm(0, 1),
beta ~ dnorm(0, 1)
)
m10H4.map <- map(f, data = salamanders)
m10H4.stan <- map2stan(f, data = salamanders, warmup = 1e3, iter = 3e3, chains = 2)
precis(m10H4.map)
precis(m10H4.stan)
f <- alist(
SALAMAN ~ dpois(lambda),
log(lambda) <- alpha + beta*PCTCOVER,
alpha ~ dnorm(0, 1),
beta ~ dnorm(0, 1)
)
map_ <- map(f, data = salamanders)
stan_ <- map2stan(f, data = salamanders, warmup = 1e3, iter = 3e3, chains = 2)
precis(map_)
precis(stan_)
f <- alist(
SALAMAN ~ dpois(lambda),
log(lambda) <- alpha + beta*PCTCOVER,
alpha ~ dnorm(0, 1),
beta ~ dnorm(0, 1)
)
map_ <- map(f, data = salamanders)
stan_ <- map2stan(f, data = salamanders, warmup = 1e4, iter = 1e4)
precis(map_)
precis(stan_)
f <- alist(
SALAMAN ~ dpois(lambda),
log(lambda) <- alpha + beta*FORESTAGE,
alpha ~ dnorm(0, 1),
beta ~ dnorm(0, 1)
)
map_ <- map(f, data = salamanders)
stan_ <- map2stan(f, data = salamanders, warmup = 1e4, iter = 1e4)
plot(SALAMAN ~ PCTCOVER, data = salamanders)
# plot model predictions
X <- seq(from=0,to=100,length.out=30)
preY <- link(stan_, data = list(PCTCOVER = X))
#Y <- apply(X = lambda, MARGIN = 2, FUN = mean)
lambda.PI <- apply(X = lambda, MARGIN = 2, FUN = PI)
counts <- sim(m10H4.stan, data = list(PCTCOVER = pctcover.seq))
counts.mean <- apply(X = counts, MARGIN = 2, FUN = mean)
counts.PI <- apply(X = counts, MARGIN = 2, FUN = PI)
plot(SALAMAN ~ PCTCOVER, data = salamanders)
lines(X, Y)
# plot model predictions
X <- seq(from=0,to=100,length.out=30)
preY <- link(stan_, data = list(PCTCOVER = X))
#Y <- apply(X = lambda, MARGIN = 2, FUN = mean)
lambda.PI <- apply(X = lambda, MARGIN = 2, FUN = PI)
counts <- sim(m10H4.stan, data = list(PCTCOVER = pctcover.seq))
counts.mean <- apply(X = counts, MARGIN = 2, FUN = mean)
counts.PI <- apply(X = counts, MARGIN = 2, FUN = PI)
plot(SALAMAN ~ PCTCOVER, data = salamanders)
lines(X, preY)
# plot model predictions
X <- seq(from=0,to=100,length.out=30)
preY <- link(stan_, data = list(PCTCOVER = X))
Y <- apply(X = preY, MARGIN = 2, FUN = mean)
lambda.PI <- apply(X = lambda, MARGIN = 2, FUN = PI)
counts <- sim(m10H4.stan, data = list(PCTCOVER = pctcover.seq))
counts.mean <- apply(X = counts, MARGIN = 2, FUN = mean)
counts.PI <- apply(X = counts, MARGIN = 2, FUN = PI)
plot(SALAMAN ~ PCTCOVER, data = salamanders)
lines(X, Y)
# plot model predictions
X <- seq(from=0,to=100,length.out=30)
preY <- link(stan_, data = list(PCTCOVER = X))
Y <- mean(preY)
lambda.PI <- apply(X = lambda, MARGIN = 2, FUN = PI)
counts <- sim(m10H4.stan, data = list(PCTCOVER = pctcover.seq))
counts.mean <- apply(X = counts, MARGIN = 2, FUN = mean)
counts.PI <- apply(X = counts, MARGIN = 2, FUN = PI)
plot(SALAMAN ~ PCTCOVER, data = salamanders)
lines(X, Y)
View(preY)
# plot model predictions
X <- seq(from=0,to=100,length.out=30)
preY <- link(stan_, data = list(PCTCOVER = X))
Y <- apply(X = preY, FUN = mean)
# plot model predictions
X <- seq(from=0,to=100,length.out=30)
preY <- link(stan_, data = list(PCTCOVER = X))
Y <- apply(X = preY, MARGIN = 1, FUN = mean)
lambda.PI <- apply(X = lambda, MARGIN = 2, FUN = PI)
counts <- sim(m10H4.stan, data = list(PCTCOVER = pctcover.seq))
counts.mean <- apply(X = counts, MARGIN = 2, FUN = mean)
counts.PI <- apply(X = counts, MARGIN = 2, FUN = PI)
plot(SALAMAN ~ PCTCOVER, data = salamanders)
lines(X, Y)
# plot model predictions
X <- seq(from=0,to=100,length.out=30)
preY <- link(stan_, data = list(PCTCOVER = X))
Y <- apply(X = preY, MARGIN = 2, FUN = mean)
lambda.PI <- apply(X = lambda, MARGIN = 2, FUN = PI)
counts <- sim(m10H4.stan, data = list(PCTCOVER = pctcover.seq))
counts.mean <- apply(X = counts, MARGIN = 2, FUN = mean)
counts.PI <- apply(X = counts, MARGIN = 2, FUN = PI)
plot(SALAMAN ~ PCTCOVER, data = salamanders)
lines(X, Y)
# plot model predictions
X <- seq(from=0,to=100,length.out=30)
preY <- link(stan_, data = list(PCTCOVER = X))
Y <- apply(X = preY, MARGIN = 2, FUN = mean)
counts <- sim(stan_, data = list(PCTCOVER = X))
counts_mean <- apply(X = counts, MARGIN = 2, FUN = mean)
plot(SALAMAN ~ PCTCOVER, data = salamanders)
lines(X, Y)
lines(X, counts_mean)
# plot model predictions
X <- seq(from=0,to=100,length.out=30)
preY <- link(stan_, data = list(PCTCOVER = X))
Y <- apply(X = preY, MARGIN = 2, FUN = mean)
counts <- sim(stan_, data = list(PCTCOVER = X))
counts_mean <- apply(X = counts, MARGIN = 2, FUN = mean)
plot(SALAMAN ~ PCTCOVER, data = salamanders)
#lines(X, Y)
lines(X, counts_mean)
# plot model predictions
X <- seq(from=0,to=100,length.out=30)
preY <- link(stan_, data = list(PCTCOVER = X))
Y <- apply(X = preY, MARGIN = 2, FUN = mean)
counts <- sim(stan_, data = list(PCTCOVER = X))
counts_mean <- apply(X = counts, MARGIN = 2, FUN = mean)
counts_PI <- apply(X = counts, margin = 2, FUN = PI)
# plot model predictions
X <- seq(from=0,to=100,length.out=30)
preY <- link(stan_, data = list(PCTCOVER = X))
Y <- apply(X = preY, MARGIN = 2, FUN = mean)
counts <- sim(stan_, data = list(PCTCOVER = X))
counts_mean <- apply(X = counts, MARGIN = 2, FUN = mean)
counts_PI <- apply(X = counts, MARGIN = 2, FUN = PI)
plot(SALAMAN ~ PCTCOVER, data = salamanders)
#lines(X, Y)
lines(X, counts_mean)
lines(X, counts_PI)
# plot model predictions
X <- seq(from=0,to=100,length.out=30)
preY <- link(stan_, data = list(PCTCOVER = X))
Y <- apply(X = preY, MARGIN = 2, FUN = mean)
counts <- sim(stan_, data = list(PCTCOVER = X))
counts_mean <- apply(X = counts, MARGIN = 2, FUN = mean)
counts_PI <- apply(X = counts, MARGIN = 2, FUN = PI)
plot(SALAMAN ~ PCTCOVER, data = salamanders)
#lines(X, Y)
lines(X, counts_mean)
lines(counts_PI, X)
# plot model predictions
X <- seq(from=0,to=100,length.out=30)
preY <- link(stan_, data = list(PCTCOVER = X))
Y <- apply(X = preY, MARGIN = 2, FUN = mean)
counts <- sim(stan_, data = list(PCTCOVER = X))
counts_mean <- apply(X = counts, MARGIN = 2, FUN = mean)
counts_PI <- apply(X = counts, MARGIN = 2, FUN = PI)
plot(SALAMAN ~ PCTCOVER, data = salamanders)
#lines(X, Y)
lines(X, counts_mean)
shade(counts_PI, X)
# plot model predictions
X <- seq(from=0,to=100,length.out=30)
preY <- link(stan_, data = list(PCTCOVER = X))
Y <- apply(X = preY, MARGIN = 2, FUN = mean)
counts <- sim(stan_, data = list(PCTCOVER = X))
counts_mean <- apply(X = counts, MARGIN = 2, FUN = mean)
counts_PI <- apply(X = counts, MARGIN = 2, FUN = PI)
plot(SALAMAN ~ PCTCOVER, data = salamanders)
#lines(X, Y)
lines(X, counts_mean)
shade(X, counts_PI)
# plot model predictions
X <- seq(from=0,to=100,length.out=30)
preY <- link(stan_, data = list(PCTCOVER = X))
Y <- apply(X = preY, MARGIN = 2, FUN = mean)
counts <- sim(stan_, data = list(PCTCOVER = X))
counts_mean <- apply(X = counts, MARGIN = 2, FUN = mean)
counts_PI <- apply(X = counts, MARGIN = 2, FUN = PI)
plot(SALAMAN ~ PCTCOVER, data = salamanders)
#lines(X, Y)
lines(X, counts_mean)
shade(counts_PI, X)
# plot model predictions
X <- seq(from=0,to=100,length.out=30)
Y <- sim(stan_, data = list(PCTCOVER = X))
Y_mean <- apply(X = counts, MARGIN = 2, FUN = mean)
Y_PI <- apply(X = counts, MARGIN = 2, FUN = PI)
plot(SALAMAN ~ PCTCOVER, data = salamanders)
lines(X, Y_mean)
shade(Y_PI, X)
f <- alist(
SALAMAN ~ dpois(lambda),
log(lambda) <- alpha + beta*PCTCOVER,
alpha ~ dnorm(0, 1),
beta ~ dnorm(0, 1)
)
map_ <- map(f, data = salamanders)
stan_ <- map2stan(f, data = salamanders, warmup = 1e4, iter = 1e4)
f <- alist(
SALAMAN ~ dpois(lambda),
log(lambda) <- alpha + beta*FORESTAGE,
alpha ~ dnorm(0, 1),
beta ~ dnorm(0, 1)
)
map_ <- map(f, data = salamanders)
stan_ <- map2stan(f, data = salamanders, warmup = 1e4, iter = 1e4)
X <- seq(from=0,to=100,length.out=30)
Y <- sim(stan_, data = list(FORESTAGE = X))
Y_mean <- apply(X = counts, MARGIN = 2, FUN = mean)
Y_PI <- apply(X = counts, MARGIN = 2, FUN = PI)
plot(SALAMAN ~ FORESTAGE, data = salamanders)
lines(X, Y_mean)
shade(Y_PI, X)
f <- alist(
SALAMAN ~ dpois(lambda),
log(lambda) <- alpha + beta*FORESTAGE,
alpha ~ dnorm(0, 1),
beta ~ dnorm(0, 1)
)
map_ <- map(f, data = salamanders)
stan_ <- map2stan(f, data = salamanders, warmup = 1e4, iter = 1e4)
f <- alist(
SALAMAN ~ dpois(lambda),
log(lambda) <- alpha + beta*FORESTAGE,
alpha ~ dnorm(0, 10),
beta ~ dnorm(0, 10)
)
map_ <- map(f, data = salamanders)
stan_ <- map2stan(f, data = salamanders, warmup = 1e4, iter = 1e4)
f <- alist(
SALAMAN ~ dpois(lambda),
log(lambda) <- alpha + beta*FORESTAGE,
alpha ~ dnorm(0, 10),
beta ~ dnorm(0, 10)
)
map_ <- map(f, data = salamanders)
f <- alist(
SALAMAN ~ dpois(lambda),
log(lambda) <- alpha + beta*FORESTAGE,
alpha ~ dnorm(0, 10),
beta ~ dnorm(0, 10)
)
map_ <- map(f, data = salamanders)
f <- alist(
SALAMAN ~ dpois(lambda),
log(lambda) <- alpha + beta*FORESTAGE,
alpha ~ dnorm(0, 10),
beta ~ dnorm(0, 10)
)
map_ <- map(f, data = salamanders)
f <- alist(
SALAMAN ~ dpois(lambda),
log(lambda) <- alpha + beta*FORESTAGE,
alpha ~ dnorm(0, 10),
beta ~ dnorm(0, 10)
)
map_ <- map(f, data = salamanders)
stan_ <- map2stan(f, data = salamanders, warmup = 1e4, iter = 1e4)
f <- alist(
SALAMAN ~ dpois(lambda),
log(lambda) <- alpha + beta*FORESTAGE,
alpha ~ dnorm(2, 1),
beta ~ dnorm(2, 1)
)
map_ <- map(f, data = salamanders)
stan_ <- map2stan(f, data = salamanders, warmup = 1e4, iter = 1e4)
f <- alist(
SALAMAN ~ dpois(lambda),
log(lambda) <- alpha + beta*FORESTAGE,
alpha ~ dnorm(0, 1),
beta ~ dnorm(0, 1)
)
map_ <- map(f, data = salamanders)
stan_ <- map2stan(f, data = salamanders, warmup = 1e4, iter = 1e4, chains = 4)
X <- seq(from=0,to=700,length.out=30)
Y <- sim(stan_, data = list(FORESTAGE = X))
Y_mean <- apply(X = counts, MARGIN = 2, FUN = mean)
Y_PI <- apply(X = counts, MARGIN = 2, FUN = PI)
plot(SALAMAN ~ FORESTAGE, data = salamanders)
lines(X, Y_mean)
shade(Y_PI, X)
